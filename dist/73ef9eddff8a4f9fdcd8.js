webpackJsonp([0],{308:function(t,n,e){"use strict";var r=e(44),i=e(309);t.exports=i({props:{path:String,repo:String,value:Object},data:function(){return{branchName:"master",branches:[],tags:[]}},computed:{branchObject:function(){return this.value},commits:function(){var t=[];return t=t.concat(this.branches),t=t.concat(this.tags),this.branchObject.isBranch||this.branchObject.isTag||(t=t.concat(this.branchObject)),t},currentBranchObject:function(){var t=this;return this.commits.filter(function(n){return n.name===t.branchName})[0]}},watch:{branchObject:function(t){this.branchName=t.name},repo:function(){this.fetchList()}},mounted:function(){this.fetchList()},methods:{fetchList:function(){return regeneratorRuntime.async(function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,regeneratorRuntime.awrap(Promise.all([this.fetchBranches(),this.fetchTags()]));case 2:case"end":return t.stop()}},null,this)},fetchBranches:function(){var t,n;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return this.branches=[],t=["","api","repos",this.repo,"branches"].join("/"),e.next=4,regeneratorRuntime.awrap(r.get(t));case 4:n=e.sent,this.branches=n.data;case 6:case"end":return e.stop()}},null,this)},fetchTags:function(){var t,n;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return this.tags=[],t=["","api","repos",this.repo,"tags"].join("/"),e.next=4,regeneratorRuntime.awrap(r.get(t));case 4:n=e.sent,this.tags=n.data;case 6:case"end":return e.stop()}},null,this)},onInput:function(){this.$emit("input",this.currentBranchObject)}}})},309:function(t,n,e){var r=function(){var t=this,n=t.$createElement,e=t._self._c||n;return e("el-select",{attrs:{"value-key":"name"},on:{input:t.onInput},model:{value:t.branchName,callback:function(n){t.branchName=n},expression:"branchName"}},t._l(t.commits,function(t){return e("el-option",{attrs:{label:t.name||t.commit,value:t.name||t.commit}})}))},i=[];t.exports=function(t){var n="function"==typeof t?t.options:t;return n.render=r,n.staticRenderFns=i,t}},320:function(t,n,e){var r=function(){var t=this,n=t.$createElement,e=t._self._c||n;return e("div",[e("div",[e("branch-select",{attrs:{repo:t.repo},on:{input:t.checkout},model:{value:t.currentBranchObject,callback:function(n){t.currentBranchObject=n},expression:"currentBranchObject"}}),e("span",{staticClass:"navi-paths breadcrum"},[e("router-link",{attrs:{to:t.urlPrefix}},[t._v(t._s(t.repo))])],1)],1),e("div",{staticClass:"commit-list"},[e("header",{staticClass:"commit-header"},[t._v("Commits")]),e("ul",{staticClass:"commit-rows"},t._l(t.commits,function(n){return e("li",{staticClass:"commit-row"},[e("div",{staticClass:"avatar"},[e("img",{attrs:{src:n.avatarUrl}})]),e("div",{staticClass:"commit-content"},[e("div",{staticClass:"commit-message"},[e("a",{attrs:{href:"#"}},[t._v(t._s(n.message))])]),e("div",{staticClass:"commit-commiter"},[e("a",{staticClass:"commit-author",attrs:{href:"#"}},[t._v(t._s(n.author))]),t._v("\ncommited\n"),e("el-tooltip",[e("div",{slot:"content"},[t._v(t._s(t._f("date")(n.updated)))]),e("span",{staticClass:"commit-time"},[t._v(t._s(t._f("fromNow")(n.updated)))])])],1)]),e("div",{staticClass:"commit-actions"},[e("div",{staticClass:"commit-sha"},[e("el-tooltip",[e("div",{slot:"content"},[t._v(t._s(n.commit))]),e("span",[t._v(t._s(n.commit.substring(0,10)))])])],1),e("div",[e("router-link",{staticClass:"el-button",attrs:{to:"/repos/"+t.repo+"/commits/"+n.commit+"/tree"}},[t._v("Browse Files")])],1)])])}))])])},i=[];t.exports=function(t){var n="function"==typeof t?t.options:t;return n.render=r,n.staticRenderFns=i,t}},321:function(t,n,e){var r=e(322);"string"==typeof r&&(r=[[t.i,r,""]]);var i={};i.transform=void 0;e(121)(r,i);r.locals&&(t.exports=r.locals)},322:function(t,n,e){n=t.exports=e(120)(void 0),n.push([t.i,'.navi-paths.breadcrum {\n  line-height: 26px;\n  font-size: 16px;\n}\n\n.navi-paths.breadcrum .separater:before,\n.navi-paths.breadcrum .separater:after {\n  content: " ";\n}\n\n.commit-list header {\n  display: flex;\n  background-color: #eef1f6;\n  line-height: 30px;\n  padding: 5px;\n}\n\n.commit-list .commit-rows {\n  list-style: none;\n  margin: 0;\n  padding: 0;\n  border: solid 1px #ccc;\n  width: 100%;\n}\n\n.commit-list .commit-row {\n  display: flex;\n  margin: 0;\n  padding: 10px;\n  border-bottom: 1px solid #eee;\n  vertical-align: middle;\n  align-items: center;\n  min-height: 50px;\n}\n\n.commit-list .commit-row:hover {\n  background: #eee;\n}\n\n.commit-list .commit-row .avatar {\n  width: 46px;\n  padding-right: 10px;\n}\n\n.commit-list .commit-row .avatar img {\n  width: 40px;\n  height: 40px;\n  border-radius: 20px;\n}\n\n.commit-list .commit-row .commit-content {\n  flex-grow: 1;\n  padding-right: 10px;\n}\n\n.commit-list .commit-row .commit-content .commit-message {\n  font-weight: 600;\n}\n\n.commit-list .commit-row .commit-actions {\n  display: flex;\n  vertical-align: middle;\n  align-items: center;\n}\n\n.commit-list .commit-row .commit-actions .commit-sha {\n  padding-right: 10px;\n}',""])},9:function(t,n,e){"use strict";var r=e(44),i=e(320);e(321),t.exports=i({name:"repo-detail-branch-tree",components:{"branch-select":e(308)},data:function(){return{currentBranchObject:{},commits:[]}},computed:{branchName:function(){return this.$route.params.branch},tagName:function(){return this.$route.params.tag},commitName:function(){return this.$route.params.commit},name:function(){return this.currentBranchObject.name||""},repo:function(){return this.$route.params.repo},commit:function(){return this.currentBranchObject.commit},urlPrefix:function(){var t="commits",n=this.currentBranchObject.commit;return this.currentBranchObject.isBranch?(t="branches",n=encodeURIComponent(this.name)):this.currentBranchObject.isTag&&(t="tags",n=encodeURIComponent(this.name)),["","repos",this.repo,t,n,"tree"].join("/")}},watch:{currentBranchObject:function(){this.fetchCommit()}},mounted:function(){this.init()},methods:{init:function(){var t,n,e,i,a,c;return regeneratorRuntime.async(function(s){for(;;)switch(s.prev=s.next){case 0:if(!this.branchName){s.next=8;break}return t=["/api/repos",this.repo,"branches",this.branchName].join("/"),s.next=4,regeneratorRuntime.awrap(r.get(t));case 4:n=s.sent,this.currentBranchObject=n.data,s.next=22;break;case 8:if(!this.tagName){s.next=16;break}return e=["/api/repos",this.repo,"tags",this.tagName].join("/"),s.next=12,regeneratorRuntime.awrap(r.get(e));case 12:i=s.sent,this.currentBranchObject=i.data,s.next=22;break;case 16:if(!this.commitName){s.next=22;break}return a=["/api/repos",this.repo,"commits",this.commitName].join("/"),s.next=20,regeneratorRuntime.awrap(r.get(a));case 20:c=s.sent,this.currentBranchObject=c.data;case 22:case"end":return s.stop()}},null,this)},checkout:function(t){this.currentBranchObject=t,this.$router.push({params:{branch:this.branch}})},fetchCommit:function(){var t,n;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return this.commits=[],t=["","api","repos",this.repo,"commits",this.commit,"commits"].join("/"),e.next=4,regeneratorRuntime.awrap(r.get(t));case 4:n=e.sent,this.commits=n.data;case 6:case"end":return e.stop()}},null,this)}}})}});